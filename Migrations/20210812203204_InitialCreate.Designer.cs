// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using teste.Models;

namespace teste.Migrations
{
    [DbContext(typeof(testeContext))]
    [Migration("20210812203204_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.utf8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("teste.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("hero");
                });

            modelBuilder.Entity("teste.Models.HeroPower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<int>("HeroId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_id");

                    b.Property<int>("PowerId")
                        .HasColumnType("integer")
                        .HasColumnName("power_id");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("PowerId");

                    b.ToTable("hero_power");
                });

            modelBuilder.Entity("teste.Models.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("power");
                });

            modelBuilder.Entity("teste.Models.HeroPower", b =>
                {
                    b.HasOne("teste.Models.Hero", "Hero")
                        .WithMany("HeroPowers")
                        .HasForeignKey("HeroId")
                        .HasConstraintName("hero_power_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("teste.Models.Power", "Power")
                        .WithMany("HeroPowers")
                        .HasForeignKey("PowerId")
                        .HasConstraintName("hero_power_fk_1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("Power");
                });

            modelBuilder.Entity("teste.Models.Hero", b =>
                {
                    b.Navigation("HeroPowers");
                });

            modelBuilder.Entity("teste.Models.Power", b =>
                {
                    b.Navigation("HeroPowers");
                });
#pragma warning restore 612, 618
        }
    }
}
